# Beta Estimation 

```{r}
system_time <- function(x) {
  print(system.time(x))
  x
}
```

```{r}
#| warning: false
library(tidyverse)
library(DBI)
library(scales)
library(dbplyr)
library(farr)
```

## Estimating Beta using Monthly Returns

```{r}
db <- dbConnect(duckdb::duckdb())
crsp_monthly <- load_parquet(db, "crsp_monthly", "tidy_finance")
crsp_daily <- load_parquet(db, "crsp_daily", "tidy_finance")
factors_ff3_monthly <- load_parquet(db,
                                    "factors_ff3_monthly", 
                                    "tidy_finance") 
factors_ff3_daily <- load_parquet(db,
                                  "factors_ff3_daily", 
                                  "tidy_finance") 
```

```{r}
crsp_monthly <- 
  crsp_monthly |>
  select(permno, month, industry, ret_excess) |>
  left_join(
    factors_ff3_monthly |>
      select(month, mkt_excess), by = "month")
```


```{r}
fit <- lm(ret_excess ~ mkt_excess,
  data = crsp_monthly |>
    filter(permno == "14593")
)

summary(fit)
```

## Rolling-window estimation

```{r}
w <- paste("OVER (PARTITION BY permno",
           "ORDER BY month",
           "RANGE BETWEEN INTERVAL '60 MONTHS' PRECEDING AND",
           "CURRENT ROW)")
```

```{r}
beta_monthly <-
  crsp_monthly |>
  mutate(beta = sql(paste("regr_slope(ret_excess, mkt_excess)", w)),
         n_rets = sql(paste("count(ret_excess)", w))) |>
  filter(n_rets >= 48) |>
  select(permno, month, beta) |>
  compute() |>
  system_time()
```

```{r}
w <- paste("OVER (PARTITION BY permno",
            "ORDER BY date",
            "RANGE BETWEEN INTERVAL '3 MONTHS' PRECEDING AND CURRENT ROW)")

```

```{r}
beta_daily <-
  crsp_daily |>
  inner_join(
    factors_ff3_daily |>
      select(date, mkt_excess), by = "date") |>
  select(permno, date, month, ret_excess, mkt_excess) |>
  mutate(beta = sql(paste("regr_slope(ret_excess, mkt_excess)", w)),
         n_rets = sql(paste("count(ret_excess)", w))) |>
  filter(n_rets >= 50) |>
  mutate(month = floor_date(date, "month")) |>
  group_by(permno, month) |>
  filter(date == max(date, na.rm = TRUE)) |>
  ungroup() |>
  select(permno, month, date, beta) |>
  compute() |>
  system_time()
```

## Comparing beta estimates

The remaining code is largely copy-pasted from Tidy Finance.
Our focus here is @fig-beta-comp, a version of Figure 4 from Tidy Finance that compares monthly and daily beta estimates for four stocks.

```{r}
examples <- tribble(
  ~permno, ~company,
  14593, "Apple",
  10107, "Microsoft",
  93436, "Tesla",
  17778, "Berkshire Hathaway") |>
  copy_to(db, df = _, name = "examples", overwrite = TRUE)
```

Because we have retained `date`, we merge on that variable too when constructing `beta`.

```{r}
beta <- 
  beta_monthly |>
  full_join(beta_daily, 
            by = c("permno", "month"),
            suffix = c("_monthly", "_daily"))
```

```{r}
beta_examples <- 
  beta |>
  inner_join(examples, by = "permno") |>
  select(permno, company, month, beta_monthly) 

beta_examples |>
  filter(!is.na(beta_monthly)) |>
  ggplot(aes(
    x = month, 
    y = beta_monthly, 
    color = company,
    linetype = company)) +
  geom_line() +
  labs(
    x = NULL, y = NULL, color = NULL, linetype = NULL,
    title = "Monthly beta estimates for example stocks using 5 years of data"
  )
```

```{r}
crsp_monthly |>
  left_join(beta, join_by(permno, month)) |>
  filter(!is.na(beta_monthly)) |>
  group_by(industry, permno) |>
  summarize(beta = mean(beta_monthly, na.rm = TRUE), 
            .groups = "drop") |>
  ggplot(aes(x = reorder(industry, beta, FUN = median), y = beta)) +
  geom_boxplot() +
  coord_flip() +
  labs(
    x = NULL, y = NULL,
    title = "Firm-specific beta distributions by industry"
  )
```
```{r}
beta |>
  filter(!is.na(beta_monthly)) |>
  group_by(month) |>
  mutate(quantile = ntile(-beta_monthly, 10) * 10) |>
  group_by(month, quantile) |>
  summarize(x = min(beta_monthly, na.rm = TRUE), .groups = "drop") |>
  filter(quantile != 100) |>
  ggplot(aes(
    x = month, 
    y = x, 
    color = as_factor(quantile),
    linetype = as_factor(quantile)
    )) +
  geom_line() +
  labs(
    x = NULL, y = NULL, color = NULL, linetype = NULL,
    title = "Monthly deciles of estimated betas",
  )
```

```{r}
#| label: fig-beta-comp
beta |>
  inner_join(examples, by = "permno") |>
  filter(month >= '1980-01-01') |>
  pivot_longer(cols = c(beta_monthly, beta_daily)) |>
  filter(!is.na(value)) |>
  ggplot(aes(
    x = month, 
    y = value, 
    color = name, 
    linetype = name
    )) +
  geom_line() +
  facet_wrap(~ company, ncol = 1) +
  labs(
    x = NULL, y = NULL, color = NULL, linetype = NULL, 
    title = "Comparison of beta estimates using monthly and daily data"
  )
```

```{r}
beta_long <- 
  crsp_monthly |>
  left_join(beta, by = c("permno", "month")) |>
  select(month, beta_monthly, beta_daily) |>
  pivot_longer(cols = c(beta_monthly, beta_daily))

beta_long |>
  group_by(month, name) |>
  summarize(share = sum(as.double(!is.na(value)), na.rm = TRUE) / n(),
            .groups = "drop") |>
  ggplot(aes(
    x = month, 
    y = share, 
    color = name,
    linetype = name
    )) +
  geom_line() +
  scale_y_continuous(labels = percent) +
  labs(
    x = NULL, y = NULL, color = NULL, linetype = NULL,
    title = "End-of-month share of securities with beta estimates"
  ) +
  coord_cartesian(ylim = c(0, 1))
```

```{r}
#| warning: false
beta_long |>
  select(name, value) |>
  filter(!is.na(value)) |>
  group_by(name) |>
  summarize(
    mean = mean(value),
    sd = sd(value),
    min = min(value),
    q05 = quantile(value, 0.05),
    q50 = quantile(value, 0.50),
    q95 = quantile(value, 0.95),
    max = max(value),
    n = n()
  ) |>
  collect()
```

```{r}
dbDisconnect(db, shutdown = TRUE)
```